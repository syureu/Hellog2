{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\2\\uD559\\uAE30\\\\2\\uD559\\uAE30\\uC800\\uC7A5\\uC18C\\\\s03p13d203(sub3)\\\\material-dashboard-react-master\\\\material-dashboard-react-master\\\\src\\\\views\\\\MyLog\\\\index.jsx\";\n\nimport React from \"react\"; // import Layout from '../../layout/';\n\nimport { Grid, Typography, Divider, makeStyles } from \"@material-ui/core\"; // import Wrapper from './styles';\n\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { Bar } from \"react-chartjs-2\";\nvar localizer = momentLocalizer(moment);\nvar now = new Date();\nvar temp = new Date(2020, 6, 25);\nvar eventList = [{\n  id: 0,\n  title: \"Today\",\n  start: new Date(new Date().setHours(new Date().getHours() - 3)),\n  end: new Date(new Date().setHours(new Date().getHours() + 3))\n}, {\n  id: 1,\n  title: \"Point in Time Event\",\n  start: now,\n  end: temp\n}, {\n  id: 2,\n  title: \"Video Record\",\n  start: temp,\n  end: temp\n}];\nvar options = {\n  legend: {\n    display: false // label 숨기기\n\n  },\n  scales: {\n    yAxes: [{\n      ticks: {\n        min: 0,\n        // 스케일에 대한 최솟갓 설정, 0 부터 시작\n        stepSize: 1 // 스케일에 대한 사용자 고정 정의 값\n\n      }\n    }]\n  },\n  maintainAspectRatio: false // false로 설정 시 사용자 정의 크기에 따라 그래프 크기가 결정됨.\n\n};\nvar arr = [10, 0, 0, 0, 0, 0, 0, 0];\n\nvar Graph = function Graph(_ref) {\n  var rankArr = _ref.rankArr;\n  var calculatedArr = [0, 0, 0, 0, 0, 0, 0, 0];\n  rankArr.forEach(function (item) {\n    return calculatedArr[item]++;\n  });\n  var rankColor = [\"#11b288\", \"#207ac7\", \"#207ac7\", \"#207ac7\", \"#d6d6d6\", \"#d6d6d6\", \"#d6d6d6\", \"#d6d6d6\"];\n  var data = {\n    labels: [\"#1\", \"#2\", \"#3\", \"#4\", \"#5\", \"#6\", \"#7\", \"#8\"],\n    datasets: [{\n      backgroundColor: rankColor,\n      borderColor: rankColor,\n      borderWidth: 1,\n      hoverBackgroundColor: rankColor,\n      hoverBorderColor: rankColor,\n      data: calculatedArr\n    }]\n  };\n  return /*#__PURE__*/React.createElement(Bar, {\n    data: data,\n    width: 300,\n    height: 200,\n    options: options,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 10\n    }\n  });\n};\n\nvar MyLog = function MyLog() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"vote-grid-title-grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    align: \"center\",\n    className: \"vote-grid-title-typography1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"\\uC5EC\\uAE30\\uB2E4\\uAC00 \\uD68C\\uC6D0\\uC758 \\uC774\\uB984\")), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      margin: \"0px 0 20px 0\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Graph, {\n    rankArr: arr,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      margin: \"20px 0 20px 0\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Graph, {\n    rankArr: arr,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      margin: \"20px 0 20px 0\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Graph, {\n    rankArr: arr,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    localizer: localizer,\n    events: eventList,\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    style: {\n      height: 600\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default MyLog;","map":{"version":3,"sources":["C:/Users/multicampus/Desktop/2학기/2학기저장소/s03p13d203(sub3)/material-dashboard-react-master/material-dashboard-react-master/src/views/MyLog/index.jsx"],"names":["React","Grid","Typography","Divider","makeStyles","Calendar","momentLocalizer","moment","Bar","localizer","now","Date","temp","eventList","id","title","start","setHours","getHours","end","options","legend","display","scales","yAxes","ticks","min","stepSize","maintainAspectRatio","arr","Graph","rankArr","calculatedArr","forEach","item","rankColor","data","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","MyLog","margin","height"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import Layout from '../../layout/';\nimport { Grid, Typography, Divider, makeStyles } from \"@material-ui/core\";\n// import Wrapper from './styles';\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst localizer = momentLocalizer(moment);\n\nconst now = new Date();\nconst temp = new Date(2020, 6, 25);\n\nconst eventList = [\n  {\n    id: 0,\n    title: \"Today\",\n    start: new Date(new Date().setHours(new Date().getHours() - 3)),\n    end: new Date(new Date().setHours(new Date().getHours() + 3)),\n  },\n  {\n    id: 1,\n    title: \"Point in Time Event\",\n    start: now,\n    end: temp,\n  },\n  {\n    id: 2,\n    title: \"Video Record\",\n    start: temp,\n    end: temp,\n  },\n];\n\nconst options = {\n  legend: {\n    display: false, // label 숨기기\n  },\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          min: 0, // 스케일에 대한 최솟갓 설정, 0 부터 시작\n          stepSize: 1, // 스케일에 대한 사용자 고정 정의 값\n        },\n      },\n    ],\n  },\n  maintainAspectRatio: false, // false로 설정 시 사용자 정의 크기에 따라 그래프 크기가 결정됨.\n};\n\nconst arr = [10, 0, 0, 0, 0, 0, 0, 0];\n\nconst Graph = ({ rankArr }) => {\n  let calculatedArr = [0, 0, 0, 0, 0, 0, 0, 0];\n  rankArr.forEach((item) => calculatedArr[item]++);\n  let rankColor = [\n    \"#11b288\",\n    \"#207ac7\",\n    \"#207ac7\",\n    \"#207ac7\",\n    \"#d6d6d6\",\n    \"#d6d6d6\",\n    \"#d6d6d6\",\n    \"#d6d6d6\",\n  ];\n\n  const data = {\n    labels: [\"#1\", \"#2\", \"#3\", \"#4\", \"#5\", \"#6\", \"#7\", \"#8\"],\n    datasets: [\n      {\n        backgroundColor: rankColor,\n        borderColor: rankColor,\n        borderWidth: 1,\n        hoverBackgroundColor: rankColor,\n        hoverBorderColor: rankColor,\n        data: calculatedArr,\n      },\n    ],\n  };\n\n  return <Bar data={data} width={300} height={200} options={options} />;\n};\n\nconst MyLog = () => {\n  return (\n    <div>\n      <Grid className=\"vote-grid-title-grid\">\n        <Typography\n          variant=\"h2\"\n          align=\"center\"\n          className=\"vote-grid-title-typography1\"\n        >\n          여기다가 회원의 이름\n        </Typography>\n      </Grid>\n      <Divider style={{ margin: \"0px 0 20px 0\" }} />\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid container direction=\"column\" xs={12} sm={6}>\n          <Grid item>\n            <Graph rankArr={arr} />\n          </Grid>\n          <Divider style={{ margin: \"20px 0 20px 0\" }} />\n          <Grid item>\n            <Graph rankArr={arr} />\n          </Grid>\n          <Divider style={{ margin: \"20px 0 20px 0\" }} />\n          <Grid item>\n            <Graph rankArr={arr} />\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Calendar\n            localizer={localizer}\n            events={eventList}\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n            style={{ height: 600 }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default MyLog;\n"]},"metadata":{},"sourceType":"module"}