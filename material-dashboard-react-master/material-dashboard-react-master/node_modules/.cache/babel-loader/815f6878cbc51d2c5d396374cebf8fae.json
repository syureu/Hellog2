{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\2\\uD559\\uAE30\\\\2\\uD559\\uAE30\\uC800\\uC7A5\\uC18C\\\\s03p13d203(sub3)\\\\material-dashboard-react-master\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\2\\uD559\\uAE30\\\\2\\uD559\\uAE30\\uC800\\uC7A5\\uC18C\\\\s03p13d203(sub3)\\\\material-dashboard-react-master\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\2\\uD559\\uAE30\\\\2\\uD559\\uAE30\\uC800\\uC7A5\\uC18C\\\\s03p13d203(sub3)\\\\material-dashboard-react-master\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\2\\uD559\\uAE30\\\\2\\uD559\\uAE30\\uC800\\uC7A5\\uC18C\\\\s03p13d203(sub3)\\\\material-dashboard-react-master\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\2\\uD559\\uAE30\\\\2\\uD559\\uAE30\\uC800\\uC7A5\\uC18C\\\\s03p13d203(sub3)\\\\material-dashboard-react-master\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\2\\uD559\\uAE30\\\\2\\uD559\\uAE30\\uC800\\uC7A5\\uC18C\\\\s03p13d203(sub3)\\\\material-dashboard-react-master\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\2\\uD559\\uAE30\\\\2\\uD559\\uAE30\\uC800\\uC7A5\\uC18C\\\\s03p13d203(sub3)\\\\material-dashboard-react-master\\\\material-dashboard-react-master\\\\src\\\\views\\\\Dietboard\\\\left\\\\category.js\";\nimport React, { Component } from 'react';\nimport '../main.css';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nvar category = /*#__PURE__*/function (_Component) {\n  _inherits(category, _Component);\n\n  var _super = _createSuper(category);\n\n  function category(props) {\n    var _this;\n\n    _classCallCheck(this, category);\n\n    _this = _super.call(this, props);\n    _this._getCategoryData = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var getData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              getData = [{\n                id: 1,\n                name: '아침'\n              }, {\n                id: 2,\n                name: '점심'\n              }, {\n                id: 3,\n                name: '저녁'\n              }];\n              this.setState({\n                category: getData\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.state = {\n      category: [],\n      edit: false\n    };\n    return _this;\n  }\n\n  _createClass(category, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._getCategoryData();\n    }\n  }, {\n    key: \"render\",\n    // _addCategory = async function() {\n    //   let category_name = window.prompt('추가할 카테고리의 이름을 입력해주세요.');\n    //   if (category_name) {\n    //     category_name = category_name.trim();\n    //     if (category_name !== '' && category_name.length > 0) {\n    //       const add = await axios('/add/category', {\n    //         method: 'POST',\n    //         data: { name: category_name },\n    //         headers: new Headers(),\n    //       });\n    //       alert(add.data.msg);\n    //       this._getCategoryData();\n    //     } else {\n    //       return alert('최소 1글자 이상 입력해야 합니다.');\n    //     }\n    //   }\n    // };\n    // _removeCategory = async function(category) {\n    //   if (window.confirm(category.name + ' 카테고리를 삭제하시겠습니까?')) {\n    //     const remove = await axios('/delete/category', {\n    //       method: 'POST',\n    //       data: category,\n    //       headers: new Headers(),\n    //     });\n    //     if (remove) {\n    //       alert('카테고리 삭제가 완료되었습니다.');\n    //       this._getCategoryData();\n    //     }\n    //   }\n    // };\n    // _modifyCategory = async function(category) {\n    //   let modify_name = document.getElementsByName('modify_' + category.id)[0]\n    //     .value;\n    //   modify_name = modify_name.trim();\n    //   if (modify_name !== '' && modify_name.length > 0) {\n    //     if (category.name === modify_name) {\n    //       return alert(\n    //         '변경하려는 카테고리의 이름이 \\n기존의 카테고리명과 동일합니다.',\n    //       );\n    //     }\n    //     if (\n    //       window.confirm(\n    //         category.name +\n    //           ' 의 이름을 \\n' +\n    //           modify_name +\n    //           ' 으로 수정하시겠습니까?',\n    //       )\n    //     ) {\n    //       const data = { id: category.id, name: modify_name };\n    //       const modfy = await axios('/modify/category', {\n    //         method: 'POST',\n    //         data: data,\n    //         headers: new Headers(),\n    //       });\n    //       alert(modfy.data.msg);\n    //       this._getCategoryData();\n    //     }\n    //   } else {\n    //     return alert('변경할 카테고리의 이름을 최소 1 글자 이상 입력해주세요.');\n    //   }\n    // };\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          category = _this$state.category,\n          edit = _this$state.edit;\n      var _this$props = this.props,\n          _changeCatgory = _this$props._changeCatgory,\n          login = _this$props.login,\n          admin = _this$props.admin,\n          user_ip = _this$props.user_ip;\n      var pre_cat = '';\n\n      if (sessionStorage.getItem('category')) {\n        pre_cat = Number(sessionStorage.getItem('category'));\n      }\n\n      console.log(category);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Category\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        className: pre_cat === '' ? 'pre_cat' : null,\n        to: \"/realFinal/\",\n        onClick: function onClick() {\n          return _changeCatgory('');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, \"\\uC804\\uCCB4 \\uBCF4\\uAE30\"), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      })), category.length > 0 ? category.map(function (el, key) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          className: pre_cat === el.id ? 'pre_cat' : null,\n          to: \"/realFinal\",\n          onClick: function onClick() {\n            return _changeCatgory(el.id);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }\n        }, el.name));\n      }) : null));\n    }\n  }]);\n\n  return category;\n}(Component);\n\nexport default category;","map":{"version":3,"sources":["C:/Users/multicampus/Desktop/2학기/2학기저장소/s03p13d203(sub3)/material-dashboard-react-master/material-dashboard-react-master/src/views/Dietboard/left/category.js"],"names":["React","Component","Link","axios","category","props","_getCategoryData","getData","id","name","setState","state","edit","_changeCatgory","login","admin","user_ip","pre_cat","sessionStorage","getItem","Number","console","log","length","map","el","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../main.css';\n\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass category extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      category: [],\n      edit: false,\n    };\n  }\n\n  componentDidMount() {\n    this._getCategoryData();\n  }\n\n  _getCategoryData = async function() {\n    const getData = [\n      { id: 1, name: '아침' },\n      { id: 2, name: '점심' },\n      { id: 3, name: '저녁' },\n    ];\n\n    this.setState({ category: getData });\n  };\n\n  // _addCategory = async function() {\n  //   let category_name = window.prompt('추가할 카테고리의 이름을 입력해주세요.');\n\n  //   if (category_name) {\n  //     category_name = category_name.trim();\n\n  //     if (category_name !== '' && category_name.length > 0) {\n  //       const add = await axios('/add/category', {\n  //         method: 'POST',\n  //         data: { name: category_name },\n  //         headers: new Headers(),\n  //       });\n\n  //       alert(add.data.msg);\n  //       this._getCategoryData();\n  //     } else {\n  //       return alert('최소 1글자 이상 입력해야 합니다.');\n  //     }\n  //   }\n  // };\n\n  // _removeCategory = async function(category) {\n  //   if (window.confirm(category.name + ' 카테고리를 삭제하시겠습니까?')) {\n  //     const remove = await axios('/delete/category', {\n  //       method: 'POST',\n  //       data: category,\n  //       headers: new Headers(),\n  //     });\n\n  //     if (remove) {\n  //       alert('카테고리 삭제가 완료되었습니다.');\n  //       this._getCategoryData();\n  //     }\n  //   }\n  // };\n\n  // _modifyCategory = async function(category) {\n  //   let modify_name = document.getElementsByName('modify_' + category.id)[0]\n  //     .value;\n  //   modify_name = modify_name.trim();\n\n  //   if (modify_name !== '' && modify_name.length > 0) {\n  //     if (category.name === modify_name) {\n  //       return alert(\n  //         '변경하려는 카테고리의 이름이 \\n기존의 카테고리명과 동일합니다.',\n  //       );\n  //     }\n\n  //     if (\n  //       window.confirm(\n  //         category.name +\n  //           ' 의 이름을 \\n' +\n  //           modify_name +\n  //           ' 으로 수정하시겠습니까?',\n  //       )\n  //     ) {\n  //       const data = { id: category.id, name: modify_name };\n  //       const modfy = await axios('/modify/category', {\n  //         method: 'POST',\n  //         data: data,\n  //         headers: new Headers(),\n  //       });\n\n  //       alert(modfy.data.msg);\n  //       this._getCategoryData();\n  //     }\n  //   } else {\n  //     return alert('변경할 카테고리의 이름을 최소 1 글자 이상 입력해주세요.');\n  //   }\n  // };\n\n  render() {\n    const { category, edit } = this.state;\n    const { _changeCatgory, login, admin, user_ip } = this.props;\n\n    let pre_cat = '';\n    if (sessionStorage.getItem('category')) {\n      pre_cat = Number(sessionStorage.getItem('category'));\n    }\n    console.log(category);\n    return (\n      <div className=\"Category\">\n        <ul>\n          <li>\n            <Link\n              className={pre_cat === '' ? 'pre_cat' : null}\n              to=\"/realFinal/\"\n              onClick={() => _changeCatgory('')}\n            >\n              전체 보기\n            </Link>\n            <hr />\n          </li>\n          {category.length > 0\n            ? category.map((el, key) => {\n                return (\n                  <li key={key}>\n                    <Link\n                      className={pre_cat === el.id ? 'pre_cat' : null}\n                      to=\"/realFinal\"\n                      onClick={() => _changeCatgory(el.id)}\n                    >\n                      {el.name}\n                    </Link>\n                  </li>\n                );\n              })\n            : null}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default category;\n"]},"metadata":{},"sourceType":"module"}