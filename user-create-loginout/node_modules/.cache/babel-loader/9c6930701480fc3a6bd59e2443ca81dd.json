{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\2\\uD559\\uAE30\\\\2\\uD559\\uAE30\\uC800\\uC7A5\\uC18C\\\\s03p13d203(sub3)\\\\user-create-loginout\\\\src\\\\containers\\\\Auth\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { AuthContent, InputWithLabel, AuthButton, RightAlignedLink, AuthError } from \"components/Auth\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as authActions from \"redux/modules/auth\";\nimport * as userActions from \"redux/modules/user\";\nimport storage from \"lib/storage\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = e => {\n      const {\n        AuthActions\n      } = this.props;\n      const {\n        name,\n        value\n      } = e.target;\n      AuthActions.changeInput({\n        name,\n        value,\n        form: \"login\"\n      });\n    };\n\n    this.setError = message => {\n      const {\n        AuthActions\n      } = this.props;\n      AuthActions.setError({\n        form: \"login\",\n        message\n      });\n      return false;\n    };\n\n    this.handleLocalLogin = async () => {\n      const {\n        form,\n        AuthActions,\n        UserActions,\n        history\n      } = this.props;\n      const {\n        username,\n        password\n      } = form.toJS();\n\n      try {\n        await AuthActions.localLogin({\n          username,\n          password\n        });\n        const loggedInfo = this.props.result;\n        console.log(loggedInfo); // console.log(this.props);\n        // console.log(this.props.result);\n\n        UserActions.setLoggedInfo(loggedInfo);\n        history.push(\"/\");\n        storage.set(\"loggedInfo\", loggedInfo);\n      } catch (e) {\n        console.log(e);\n        this.setError(\"잘못된 계정정보입니다.\");\n      }\n    };\n  }\n\n  componentWillUnmount() {\n    const {\n      AuthActions\n    } = this.props;\n    AuthActions.initializeForm(\"login\");\n  }\n\n  render() {\n    const {\n      username,\n      password\n    } = this.props.form.toJS(); // form 에서 email 과 password 값을 읽어옴\n\n    const {\n      handleChange,\n      handleLocalLogin\n    } = this;\n    const {\n      error\n    } = this.props;\n    return /*#__PURE__*/React.createElement(AuthContent, {\n      title: \"\\uB85C\\uADF8\\uC778\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(InputWithLabel, {\n      label: \"\\uC544\\uC774\\uB514\",\n      name: \"username\",\n      placeholder: \"\\uC544\\uC774\\uB514\",\n      value: username,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(InputWithLabel, {\n      label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      name: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      type: \"password\",\n      value: password,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }), error && /*#__PURE__*/React.createElement(AuthError, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, error), /*#__PURE__*/React.createElement(AuthButton, {\n      onClick: handleLocalLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, \"\\uB85C\\uADF8\\uC778\"), /*#__PURE__*/React.createElement(RightAlignedLink, {\n      to: \"/auth/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"));\n  }\n\n}\n\nexport default connect(state => ({\n  form: state.auth.getIn([\"login\", \"form\"]),\n  error: state.auth.getIn([\"login\", \"error\"]),\n  result: state.auth.get(\"result\")\n}), dispatch => ({\n  AuthActions: bindActionCreators(authActions, dispatch),\n  UserActions: bindActionCreators(userActions, dispatch)\n}))(Login);","map":{"version":3,"sources":["C:/Users/multicampus/Desktop/2학기/2학기저장소/s03p13d203(sub3)/user-create-loginout/src/containers/Auth/Login.js"],"names":["React","Component","AuthContent","InputWithLabel","AuthButton","RightAlignedLink","AuthError","connect","bindActionCreators","authActions","userActions","storage","Login","handleChange","e","AuthActions","props","name","value","target","changeInput","form","setError","message","handleLocalLogin","UserActions","history","username","password","toJS","localLogin","loggedInfo","result","console","log","setLoggedInfo","push","set","componentWillUnmount","initializeForm","render","error","state","auth","getIn","get","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  AuthContent,\n  InputWithLabel,\n  AuthButton,\n  RightAlignedLink,\n  AuthError,\n} from \"components/Auth\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as authActions from \"redux/modules/auth\";\nimport * as userActions from \"redux/modules/user\";\nimport storage from \"lib/storage\";\n\nclass Login extends Component {\n  handleChange = (e) => {\n    const { AuthActions } = this.props;\n    const { name, value } = e.target;\n\n    AuthActions.changeInput({\n      name,\n      value,\n      form: \"login\",\n    });\n  };\n\n  componentWillUnmount() {\n    const { AuthActions } = this.props;\n    AuthActions.initializeForm(\"login\");\n  }\n\n  setError = (message) => {\n    const { AuthActions } = this.props;\n    AuthActions.setError({\n      form: \"login\",\n      message,\n    });\n    return false;\n  };\n\n  handleLocalLogin = async () => {\n    const { form, AuthActions, UserActions, history } = this.props;\n    const { username, password } = form.toJS();\n\n    try {\n      await AuthActions.localLogin({ username, password });\n      const loggedInfo = this.props.result;\n      console.log(loggedInfo);\n      // console.log(this.props);\n      // console.log(this.props.result);\n\n      UserActions.setLoggedInfo(loggedInfo);\n      history.push(\"/\");\n      storage.set(\"loggedInfo\", loggedInfo);\n    } catch (e) {\n      console.log(e);\n      this.setError(\"잘못된 계정정보입니다.\");\n    }\n  };\n\n  render() {\n    const { username, password } = this.props.form.toJS(); // form 에서 email 과 password 값을 읽어옴\n    const { handleChange, handleLocalLogin } = this;\n    const { error } = this.props;\n\n    return (\n      <AuthContent title=\"로그인\">\n        <InputWithLabel\n          label=\"아이디\"\n          name=\"username\"\n          placeholder=\"아이디\"\n          value={username}\n          onChange={handleChange}\n        />\n        <InputWithLabel\n          label=\"비밀번호\"\n          name=\"password\"\n          placeholder=\"비밀번호\"\n          type=\"password\"\n          value={password}\n          onChange={handleChange}\n        />\n        {error && <AuthError>{error}</AuthError>}\n        <AuthButton onClick={handleLocalLogin}>로그인</AuthButton>\n        <RightAlignedLink to=\"/auth/register\">회원가입</RightAlignedLink>\n      </AuthContent>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    form: state.auth.getIn([\"login\", \"form\"]),\n    error: state.auth.getIn([\"login\", \"error\"]),\n    result: state.auth.get(\"result\"),\n  }),\n  (dispatch) => ({\n    AuthActions: bindActionCreators(authActions, dispatch),\n    UserActions: bindActionCreators(userActions, dispatch),\n  })\n)(Login);\n"]},"metadata":{},"sourceType":"module"}